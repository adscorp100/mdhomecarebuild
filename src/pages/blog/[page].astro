---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths({ paginate }) {
  // Get all blog posts
  const allPosts = await getCollection('blog');

  // Sort posts by publication date
  const sortedPosts = allPosts.sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );

  // Generate pages with 20 posts per page
  return paginate(sortedPosts, { pageSize: 20 });
}

const { page } = Astro.props;
const { data: posts, currentPage, lastPage } = page;
---

<BaseLayout title={`Blog Page ${currentPage} | MD Homecare`}>
  <div class="container">
    <section class="blog-section">
      <h1>Blog</h1>
      <p>Stay informed with the latest homecare insights, NDIS updates, and practical advice for clients and caregivers.</p>
      
      <div class="blog-grid">
        {posts.map((post) => (
          <article class="blog-card">
            <a href={`/blog/${post.slug}`} class="card-link">
              {post.data.image && (
                <div class="card-image">
                  <img src={post.data.image} alt={post.data.title} />
                </div>
              )}
              <div class="card-content">
                <div class="post-meta">
                  <span class="post-date">{post.data.pubDate.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}</span>
                  <span class="post-author">by {post.data.author}</span>
                </div>
                <h2>{post.data.title}</h2>
                <p class="post-description">{post.data.description}</p>
                <div class="post-tags">
                  {post.data.tags.map((tag) => (
                    <span class="tag">#{tag}</span>
                  ))}
                </div>
                <span class="read-more">Read More →</span>
              </div>
            </a>
          </article>
        ))}
      </div>
      
      {lastPage > 1 && (
        <div class="pagination">
          {currentPage > 1 && (
            <a href={`/blog/${currentPage === 2 ? '' : currentPage - 1}`} class="page-link prev">
              ← Previous
            </a>
          )}
          
          <div class="page-numbers">
            {Array.from({ length: lastPage }, (_, i) => i + 1).map((page) => (
              <a 
                href={`/blog/${page === 1 ? '' : page}`} 
                class={`page-link ${currentPage === page ? 'active' : ''}`}
              >
                {page}
              </a>
            ))}
          </div>
          
          {currentPage < lastPage && (
            <a href={`/blog/${currentPage + 1}`} class="page-link next">
              Next →
            </a>
          )}
        </div>
      )}
    </section>
  </div>
</BaseLayout>

<style>
  .blog-section {
    padding: 2rem 0;
    max-width: 900px;
    margin: 0 auto;
  }
  
  .blog-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-top: 2rem;
  }
  
  .blog-card {
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    background-color: white;
  }
  
  .blog-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  .card-link {
    text-decoration: none;
    color: inherit;
    display: block;
  }
  
  .card-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
  }
  
  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .blog-card:hover .card-image img {
    transform: scale(1.05);
  }
  
  .card-content {
    padding: 1.5rem;
  }
  
  .post-meta {
    display: flex;
    justify-content: space-between;
    color: var(--text-light);
    font-size: 0.9rem;
    margin-bottom: 1rem;
    font-weight: 500;
  }
  
  .post-description {
    margin: 1rem 0;
    color: var(--text-light);
    font-weight: 500;
  }
  
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin: 1rem 0;
  }
  
  .tag {
    background-color: var(--light-background);
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.8rem;
    color: var(--text-color);
    font-weight: 500;
  }
  
  .read-more {
    display: inline-block;
    margin-top: 1rem;
    font-weight: 600;
    color: var(--primary-dark);
  }
  
  /* Pagination Styles */
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 4rem;
    gap: 1.5rem;
  }
  
  .page-numbers {
    display: flex;
    gap: 0.8rem;
  }
  
  .page-link {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 3rem;
    height: 3rem;
    padding: 0 1.5rem;
    border-radius: 50px;
    background-color: white;
    color: var(--text-color);
    text-decoration: none;
    font-weight: 600;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    border: 1px solid #eee;
  }
  
  .page-link:hover {
    background-color: var(--primary-light);
    color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  
  .page-link.active {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
  }
  
  .prev, .next {
    font-weight: 700;
    padding: 0 2rem;
  }
  
  @media (min-width: 768px) {
    .blog-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  h1 {
    color: var(--text-color);
    font-weight: 700;
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  
  h2 {
    color: var(--text-color);
    font-weight: 600;
  }
  
  p {
    color: var(--text-light);
  }
</style> 