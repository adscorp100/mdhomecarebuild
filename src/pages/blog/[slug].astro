---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import TableOfContents from '../../components/TableOfContents.astro';

// Generate static paths for all blog posts
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the blog post for the current page
const { entry } = Astro.props;
const { Content, headings } = await entry.render();

// Generate JSON-LD structured data for the article
const articleSchema = {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": entry.data.title,
  "datePublished": entry.data.pubDate.toISOString(),
  "author": {
    "@type": "Person",
    "name": entry.data.author
  },
  "publisher": {
    "@type": "Organization",
    "name": "MD Homecare",
    "logo": {
      "@type": "ImageObject",
      "url": "https://www.example.com/logo.png" // Add your actual logo URL here
    }
  },
  "description": entry.data.description,
  "image": entry.data.image,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": Astro.url.href
  }
};

// Add table of contents to structured data if headings exist
if (headings && headings.length > 0) {
  // Filter only h2 and h3 for the TOC
  const tocHeadings = headings.filter(h => h.depth === 2 || h.depth === 3);
  
  if (tocHeadings.length > 0) {
    articleSchema.hasPart = tocHeadings.map(heading => ({
      "@type": "WebPageElement",
      "isAccessibleForFree": "True",
      "cssSelector": `#${heading.slug}`,
      "name": heading.text
    }));
  }
}

const structuredData = JSON.stringify(articleSchema);
---

<BaseLayout title={`${entry.data.title} | MD Homecare`} description={entry.data.description}>
  <!-- Add structured data for SEO -->
  <script type="application/ld+json" set:html={structuredData} />
  
  <div class="container blog-container">
    <article class="blog-post">
      <header class="post-header">
        <h1>{entry.data.title}</h1>
        <div class="post-meta">
          <span class="post-date">
            {entry.data.pubDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </span>
          <span class="post-author">by {entry.data.author}</span>
        </div>
        <div class="post-tags">
          {entry.data.tags.map((tag) => (
            <span class="tag">#{tag}</span>
          ))}
        </div>
      </header>
      
      {entry.data.image && (
        <div class="post-image">
          <img src={entry.data.image} alt={entry.data.title} />
        </div>
      )}
      
      <div class="post-content-wrapper">
        <div class="toc-sidebar">
          <TableOfContents headings={headings} />
        </div>
        <div class="post-content">
          <Content />
        </div>
      </div>
    </article>
  </div>
</BaseLayout>

<style is:global>
  /* Global table styles to ensure they apply to content rendered from markdown */
  .post-content table {
    display: block;
    width: 100%;
    margin-bottom: 1.5rem;
    font-size: 0.9rem;
    -webkit-overflow-scrolling: touch;
  }
  
  /* Card-style tables for all viewport sizes */
  .post-content table.responsive-table {
    display: block;
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
  }
  
  .post-content table.responsive-table thead {
    display: none;
  }
  
  .post-content table.responsive-table tbody {
    display: block;
    width: 100%;
  }
  
  .post-content table.responsive-table tr {
    display: block;
    margin-bottom: 1rem;
    border: 1px solid #ddd;
    border-radius: 6px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.05);
  }
  
  .post-content table.responsive-table td {
    display: flex;
    padding: 12px 16px;
    text-align: left;
    border: none;
    border-bottom: 1px solid #eee;
  }
  
  .post-content table.responsive-table td:last-child {
    border-bottom: none;
  }
  
  .post-content table.responsive-table td:before {
    content: attr(data-label);
    font-weight: 600;
    width: 30%;
    min-width: 120px;
    display: inline-block;
    margin-right: 16px;
  }
  
  /* Traditional table styles - no longer used but kept for reference */
  .post-content th,
  .post-content td {
    border: 1px solid #ddd;
    padding: 8px 12px;
    text-align: left;
  }

  .post-content th {
    background-color: #f2f2f2;
    font-weight: 600;
  }
</style>

<script>
  // Add data attributes to table cells for responsive display
  document.addEventListener('DOMContentLoaded', () => {
    const tables = document.querySelectorAll('.post-content table');
    
    tables.forEach(table => {
      // Add responsive-table class to all tables
      table.classList.add('responsive-table');
      
      // Get all headers
      const headers = Array.from(table.querySelectorAll('th')).map(th => th.textContent);
      
      // For each row in tbody, add data-label to each cell
      const rows = table.querySelectorAll('tbody tr');
      rows.forEach(row => {
        const cells = row.querySelectorAll('td');
        cells.forEach((cell, index) => {
          if (headers[index]) {
            cell.setAttribute('data-label', headers[index]);
          }
        });
      });
    });
  });
</script>

<style>
  .blog-container {
    max-width: 100%;
    overflow-x: hidden;
    padding: 0 1rem;
  }

  .blog-post {
    max-width: 800px;
    margin: 0 auto;
    padding: 1rem 0;
    width: 100%;
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-word;
    hyphens: auto;
  }
  
  .post-header {
    margin-bottom: 1.5rem;
    border-bottom: 1px solid #eee;
    padding-bottom: 1rem;
    position: static;
    background: none;
    box-shadow: none;
    z-index: auto;
  }
  
  .post-header h1 {
    font-size: 1.8rem;
    line-height: 1.3;
    margin-bottom: 0.75rem;
  }
  
  .post-meta {
    margin: 0.75rem 0;
    color: var(--light-text);
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }
  
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin: 0.75rem 0;
  }
  
  .tag {
    background-color: var(--light-background);
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.8rem;
  }
  
  .post-content-wrapper {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
    margin-top: 1.5rem;
  }
  
  .post-content {
    line-height: 1.6;
    font-size: 1rem;
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-word;
    max-width: 100%;
  }
  
  .post-content h2 {
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-color);
    border-bottom: 1px solid #eee;
    padding-bottom: 0.5rem;
  }
  
  .post-content h3 {
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-color);
  }

  .post-content h4 {
    margin-top: 1.25rem;
    margin-bottom: 0.75rem;
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--text-color);
  }
  
  .post-content p {
    margin-bottom: 1.25rem;
    font-size: 1rem;
  }
  
  .post-content ul, .post-content ol {
    margin-bottom: 1.25rem;
    padding-left: 1.25rem;
  }

  .post-content li {
    margin-bottom: 0.5rem;
  }
  
  .post-content pre {
    background-color: var(--light-background);
    padding: 0.75rem;
    border-radius: 4px;
    overflow-x: auto;
    margin-bottom: 1.25rem;
    max-width: 100%;
    white-space: pre-wrap;
    word-break: break-all;
  }
  
  .post-content code {
    font-family: monospace;
    font-size: 0.9rem;
    word-break: break-all;
    word-wrap: break-word;
  }

  .post-content table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    margin-bottom: 0;
    font-size: 0.95rem;
    border: 1px solid #e2e8f0;
    border-radius: 6px;
  }

  .post-content .table-wrapper {
    width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    margin-bottom: 1.5rem;
    border-radius: 6px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.05);
  }
  
  .post-content th,
  .post-content td {
    padding: 0.75rem 1rem;
    text-align: left;
    border-bottom: 1px solid #e2e8f0;
  }

  .post-content th {
    background-color: #f8fafc;
    font-weight: 600;
    border-bottom: 2px solid #e2e8f0;
    position: sticky;
    top: 0;
  }

  .post-content tr:last-child td {
    border-bottom: none;
  }

  .post-content tr:hover {
    background-color: #f8fafc;
  }

  @media (max-width: 640px) {
    .post-content th,
    .post-content td {
      padding: 0.6rem 0.8rem;
      min-width: 120px;
    }
  }
  
  .post-image {
    margin: 0 0 1.5rem;
    border-radius: 6px;
    overflow: hidden;
    width: 100%;
  }
  
  .post-image img {
    width: 100%;
    max-height: 300px;
    object-fit: cover;
  }
  
  /* Mobile TOC styles */
  .toc-sidebar {
    margin-bottom: 1.5rem;
    padding: 1rem;
    background-color: #f9f9f9;
    border-radius: 6px;
  }

  /* Responsive adjustments */
  @media (min-width: 640px) {
    .blog-container {
      padding: 0 1.5rem;
    }
    
    .blog-post {
      padding: 1.5rem 0;
    }
    
    .post-header h1 {
      font-size: 2rem;
    }
    
    .post-content p {
      font-size: 1.05rem;
    }
    
    .post-image img {
      max-height: 400px;
    }
  }

  @media (min-width: 768px) {
    .blog-container {
      padding: 0 2rem;
    }
    
    .post-header {
      margin-bottom: 2rem;
      padding-bottom: 1.5rem;
    }
    
    .post-header h1 {
      font-size: 2.2rem;
    }
    
    .blog-post {
      padding: 2rem;
      max-width: 900px;
    }
    
    .post-content-wrapper {
      gap: 1.5rem;
    }
    
    .post-content {
      line-height: 1.7;
    }
  }
  
  @media (min-width: 1024px) {
    .blog-container {
      padding: 0;
    }
    
    .post-content-wrapper {
      grid-template-columns: 250px 1fr;
      gap: 2rem;
    }
    
    .toc-sidebar {
      position: sticky;
      top: 2rem;
      height: fit-content;
      background-color: transparent;
      padding: 0;
      margin-bottom: 0;
    }
    
    .blog-post {
      padding: 2rem 0;
      max-width: 1000px;
    }
    
    .post-header h1 {
      font-size: 2.5rem;
    }
    
    .post-content h2 {
      font-size: 1.75rem;
      margin-top: 3rem;
      margin-bottom: 1.5rem;
    }
    
    .post-content h3 {
      font-size: 1.4rem;
      margin-top: 2rem;
      margin-bottom: 1rem;
    }
    
    .post-content h4 {
      font-size: 1.2rem;
      margin-top: 1.5rem;
    }
    
    .post-content p {
      margin-bottom: 1.5rem;
    }
  }

  @media (min-width: 1280px) {
    .blog-post {
      max-width: 1100px;
    }
    
    .post-content-wrapper {
      grid-template-columns: 280px 1fr;
      gap: 3rem;
    }
  }

  @media (min-width: 1536px) {
    .blog-post {
      max-width: 1200px;
    }
  }

  .post-content img {
    max-width: 100%;
    height: auto;
  }

  .post-content .table-wrapper.scrollable::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    width: 30px;
    background: linear-gradient(to right, rgba(255,255,255,0), rgba(0,0,0,0.05));
    pointer-events: none;
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
  }

  .post-content .table-wrapper {
    position: relative;
  }
</style> 